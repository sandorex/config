#!/usr/bin/env bash
#
# https://github.com/sandorex/config
# simple pomodore timer
#
# requires at

set -e

NOTIFICATION_TIME=0
NOTIFICATION_ICON="clock"
NOTIFICATION_URGENCY="low"
NOTIFICATION_DEFAULT_MSGS=(
    "The timer has expired"
    "Whatever this was, it is no more."
    "The end has come, the end of timer of course"
)

WORK_MSGS=(
    "We're free!"
    "Glad this is over, now we can do nothing for a while"
    "Hey hey thats enough, go get some rest"
    "Why are you still here? Go touch some grass"
)

BREAK_MSGS=(
    "Now get back to work you mongrel!"
    "Ahh it was fun while it lasted"
    "Time for some good ol' grass touching"
)

if ! command -v at &>/dev/null; then
    echo "Please install 'at' command to use this script"
    exit 1
fi

get_random_msg() {
    shuf -en1 "$@"
}

schedule() {
    profile="${1:?}"
    time="${2:?}"
    shift 2

    msg="$(get_random_msg "$@")"
    echo notify-send -a "'pomodore ($profile)'" -t $NOTIFICATION_TIME -u "$NOTIFICATION_URGENCY" -i $NOTIFICATION_ICON "'$msg'" \
        | at now + "$time" minutes &>/dev/null
}

case "$1" in
    [0-9]|[0-9][0-9])
        schedule "$1" "${NOTIFICATION_DEFAULT_MSGS[@]}"
        echo "Scheduled timer in ${1}m"
        ;;
    # these are the profiles
    w|work)
        schedule 30 "${WORK_MSGS[@]}"
        echo "The timer has been scheduled, now get back to work!"
        ;;
    b|break)
        schedule 15 "${BREAK_MSGS[@]}"
        echo "The timer has been scheduled, now go away!"
        ;;
    r|rest)
        schedule 30 "${BREAK_MSGS[@]}"
        echo "The timer has been scheduled, now go rest a bit"
        ;;
    *)
        echo "Invalid option"
        cat <<EOF
Usage: $0 <time/profile> [<message>]
EOF
        exit 1
        ;;
esac


