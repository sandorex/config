#!/usr/bin/env python3

# https://github.com/sandorex/config
# flatpak nvim wrapper

import os
import sys
import click
import subprocess

FLATPAK_EXTENSION = [
    # NOTE: python is included by default
    "rust-stable",
    "node18",
]

ARGS_SANDBOXED = [
    # prevent access to ssh keys
    "--nofilesystem=~/.ssh",

    # access to scratchpad file
    "--persist=~/.nvim-scratchpad",

    # access to dotfiles
    "--filesystem=~/.dotfiles/nvim/nvim",
]

ARGS_RESTRICTED = []

ARGS_UNRESTRICTED = [
    # when its unrestricted access to all projects in workspace but not home
    "--filesystem=~/ws",
]

def setup_flatpak():
    print("Installing neovim flatpak")
    subprocess.run(["flatpak", "install", "-y", "flathub", "io.neovim.nvim"]).check_returncode()

    for i in FLATPAK_EXTENSION:
        print(f"Installing flatpak extension '{i}'")
        subprocess.run(["flatpak", "install", "-y", "flathub", f"org.freedesktop.Sdk.Extension.{i}"]).check_returncode()

# TODO allow providing paths
# TODO open scratchpad in home directory if no args
# TODO remove the flatpak neovim startup text
# TODO update command to automatically allow network access and update everything
@click.command()
@click.option("--restricted/--unrestricted", default=True, help="Minimize sandboxing (bit less safe but still sandboxed)")
@click.option("--network/--no-network", default=False, help="Control network access")
@click.option("--safe/--unsafe", default=True, help="Control sandboxing")
@click.option("--setup", is_flag=True, help="Install extensions and set things up")
@click.argument("paths", nargs=-1, required=False)
def main(restricted, network, safe, setup, paths):
    if setup:
        setup_flatpak()
        print("Setup has finished, exitting..")
        sys.exit(0)

    if not safe:
        if not click.confirm("Sandboxing is there for a reason are you sure you want to disable it?"):
            sys.exit(0)

    args = [
        # for clipboard
        "--socket=wayland",
        "--socket=fallback-x11",
        "--share=ipc",

        # PR opened for flatpak nvim https://github.com/flathub/io.neovim.nvim/pull/66
        "--env='TERMINFO_DIRS=/var/run/host/usr/share/terminfo:/usr/share/terminfo'",

        # allow access to host os files (required for the terminfo)
        "--filesystem=host-os",
    ]


    if safe:
        args += [
            "--sandbox",

            # without this all files and cache is deleted upon exiting
            "--persist=.config/nvim",
            "--persist=.local/share/nvim",
            "--persist=.local/state/nvim",
            "--persist=.cache/nvim",

            *ARGS_SANDBOXED,
        ]

        if network:
            args += [ "--share=network" ]

        # the flags arent needed if there is no sandbox cause then its all accessible
        if restricted:
            args += ARGS_RESTRICTED
        if not restricted:
            args += ARGS_UNRESTRICTED

    # enable extensions
    os.environ["FLATPAK_EXT"] = ",".join(FLATPAK_EXTENSION)

    # replace the process so python does not run in background as its not needed
    os.execvp("flatpak", [ "flatpak", "run" ] + args + [ "io.neovim.nvim", *paths ])

if __name__ == "__main__":
    main()

