#!/usr/bin/env just --justfile
container_repository_username := 'sandorex'
container_repository := 'ghcr.io'
images_dir := join(justfile_directory(), 'images')
dotfiles_dir := canonicalize(join(justfile_directory(), '../dotfiles'))
image_tag_prefix := container_repository + '/' + container_repository_username + '/'
image_tag_suffix := ':' + shell('git rev-parse --short=10 HEAD')

_default:
    @just --justfile {{ justfile() }} --list

# build image
build image:
    #!/usr/bin/env bash
    echo "Building image {{ image }}"

    # im tagging it multiple times intentionally
    # <image>:latest
    # <image>:<git_sha>
    # <repository>/<owner>/<image>:latest
    # <repository>/<owner>/<image>:<git_sha>
    podman build \
        --security-opt label=disable \
        --cache-ttl=10h \
        -t "{{ image }}:latest" \
        -t "{{ image + image_tag_suffix }}" \
        -t "{{ image_tag_prefix + image }}:latest" \
        -t "{{ image_tag_prefix + image + image_tag_suffix }}" \
        -f "Containerfile.{{ image }}" \
        --volume "{{ dotfiles_dir }}:/dotfiles:ro" \
        "{{ justfile_directory() }}"

# publish image to repository after building it
publish image: (build image)
    #!/usr/bin/env bash
    echo "Publishing image {{ image }}"
    podman image push "{{ image }}" "{{ image_tag_prefix + image + image_tag_suffix }}"

_ci_only:
    #!/usr/bin/env bash
    if [ ! -v CI ]; then
        echo "This can only run in the CI"
        exit 1
    fi

login-ci: _ci_only
    #!/usr/bin/env bash
    echo "${TOKEN:?}" podman login --username "{{ container_repository_username }}" --password-stdin {{ container_repository }}

logout-ci: _ci_only
    #!/usr/bin/env bash
    podman logout --all
