---
- name: Gaming container setup (host)
  hosts: localhost
  connection: local
  vars:
    container_name: gaming
    container_home: '/media/slowmf/GamingContainer'
    container_image: 'docker.io/library/archlinux'
    container_image_tag: latest
  tasks:
    - name: Check if container already exists
      containers.podman.podman_container_info:
        name: '{{ container_name }}'
      register: container_info

    - name: Create container using distrobox
      ansible.builtin.command:
        # requires distrobox version 1.7
        # --unshare-netns fixes games not launching after suspend
        # add python3 to allow ansible to work
        cmd: >-
          distrobox create --yes --no-entry --pull
          --image '{{ container_image }}:{{ container_image_tag }}'
          --name '{{ container_name }}'
          --home '{{ container_home }}'
          --hostname '{{ ansible_hostname }}'
          --unshare-netns
          --additional-packages 'python3'
      when: container_info.containers | length == 0

    - name: Start the container
      ansible.builtin.command:
        cmd: 'distrobox enter --name {{ container_name }} -- sh -c ''exit'''
      # start if not running or if not defined
      when: not (container_info.containers[0].State.Running | default(false))

    - name: Add container as host
      changed_when: no
      ansible.builtin.add_host:
        name: container
        ansible_connection: distrobox
        ansible_host: '{{ container_name }}'
        ansible_user: '{{ ansible_user_id }}'

- name: Gaming container setup (container)
  hosts: container
  environment:
    CONTAINER_ID: '{{ ansible_host }}'
  vars:
    steam_proton_ge_versions:
      - GE-Proton8-30
      - GE-Proton8-32
  tasks:
    - name: Enable en_US.UTF-8 locale in /etc/locale.gen
      become: yes
      ansible.builtin.lineinfile:
        path: /etc/locale.gen
        regexp: '^#en_US.UTF-8 UTF-8'
        line: 'en_US.UTF-8 UTF-8'
      register: commentline

    - name: Regenerate locale
      become: yes
      ansible.builtin.command:
        cmd: locale-gen
      when: commentline.changed

    - name: Enable pacman multilib
      become: yes
      ansible.builtin.blockinfile:
        path: /etc/pacman.conf
        insertafter: EOF
        marker: "## {mark} managed by ansible"
        block: |
          [multilib]
          Include = /etc/pacman.d/mirrorlist
      register: multilib_enable

    - name: Update packages
      become: yes
      ansible.builtin.command:
        cmd: pacman -Syuu --noconfirm
      when: multilib_enable.changed

    - name: Install required dependencies
      become: yes
      community.general.pacman:
        name:
          # core utils
          - perl
          - coreutils

          # taken from https://github.com/ublue-os/bazzite-arch/blob/91e9b3f1a9a9488d1bcd4a2e2c2286da0d37e49f/Containerfile#L6
          - lib32-vulkan-radeon
          - libva-mesa-driver
          - intel-media-driver
          - vulkan-mesa-layers
          - lib32-vulkan-mesa-layers
          - lib32-libnm
          - openal
          - pipewire
          - pipewire-pulse
          - pipewire-alsa
          - pipewire-jack
          - wireplumber
          - lib32-pipewire
          - lib32-pipewire-jack
          - lib32-libpulse
          - lib32-openal
          - xdg-desktop-portal-kde
          - yad
          - xdg-user-dirs
          - xdotool
          - xorg-xwininfo
          - wmctrl
          - wxwidgets-gtk3
          - rocm-opencl-runtime
          - rocm-hip-runtime
          - libbsd

          # fonts
          - noto-fonts-cjk
          - ttf-liberation

          # editor so i dont have to use vim
          - nano

        state: present

    # these are separated intentionally so it does not pull in different deps
    # basically taken from bassite arch container
    - name: Install steam and lutris
      become: yes
      community.general.pacman:
        name:
          - steam
          - lutris
          - mangohud
          - lib32-mangohud

    # TODO fix proton-ge-steam as ~/.steam/root is a symlink for some reason?
    - ansible.builtin.import_role:
        name: proton-ge-steam

    ## export apps to host ##
    # TODO this does not work for some reason
    # - name: Check if steam was exported
    #   ansible.builtin.stat:
    #     path: '/home/{{ ansible_user_id }}/.local/share/applications/{{ ansible_host }}-steam.desktop'
    #   register: steam_exported

    - name: Export Steam to host
      ansible.builtin.command:
        cmd: distrobox-export --app 'steam'
    # TODO use creates
      # when: steam_exported.stat.exists | default(false)

    # - name: Check if lutris was exported
    #   ansible.builtin.stat:
    #     path: '/home/{{ ansible_user_id }}/.local/share/applications/{{ ansible_host }}-net.lutris.Lutris.desktop'
    #   register: lutris_exported

    - name: Export Lutris to host
      ansible.builtin.command:
        cmd: distrobox-export --app 'lutris'
      # when: lutris_wxported.stat.exists | default(false)

