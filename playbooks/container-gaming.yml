---
- name: Gaming container setup (host)
  hosts: localhost
  connection: local
  vars:
    container_name: gaming-arch
    container_home: '/mnt/slowmf/GamingContainer2' # TODO move this to a var
    container_image: archlinux
    container_image_tag: latest
  tasks:
    - ansible.builtin.set_fact:
        container_name: '{{ container_name }}'

    - name: Check if container already exists
      containers.podman.podman_container_info:
        name: '{{ container_name }}'
      register: container_info

    - when: container_info.containers | length == 0
      block:
        - name: Create container using distrobox
          ansible.builtin.command:
            cmd: >-
              distrobox create --yes --no-entry --pull
              --image '{{ container_image }}:{{ container_image_tag }}'
              --name '{{ container_name }}'
              --home '{{ container_home }}'
              --init-hooks '''sudo hostname "$(cat /run/host/etc/hostname || printf localhost)" || true'''

        - name: Run distrobox init
          ansible.builtin.command:
            # install ansible and inetutils (hostname command)
            cmd: 'distrobox enter {{ container_name }} -- sh -c ''sudo pacman -Syu --noconfirm && sudo pacman -S --noconfirm ansible inetutils'''

          # TODO restart the container so hostname is set properly

    # TODO start the container if necessary

    - name: Check if steam was exported
      ansible.builtin.stat:
        path: '{{ ansible_env.HOME }}/.local/share/applications/{{ container_name }}-steam.desktop'
      register: steam_exported

    - name: Check if lutris was exported
      ansible.builtin.stat:
        path: '{{ ansible_env.HOME }}/.local/share/applications/{{ container_name }}-net.lutris.Lutris.desktop'
      register: lutris_exported

    - name: Add container as host
      changed_when: no
      ansible.builtin.add_host:
        name: gaming-container
        ansible_connection: distrobox
        ansible_host: '{{ container_name }}'

        steam_exported: '{{ steam_exported.stat.exists }}'
        lutris_exported: '{{ lutris_exported.stat.exists }}'

- name: Gaming container setup (container)
  hosts: gaming-container
  environment:
    CONTAINER_ID: '{{ hostvars["localhost"]["container_name"] }}'
  vars:
    steam_proton_ge_versions:
      - GE-Proton8-30
    pacman_packages:
      - vulkan-radeon
      - lib32-vulkan-radeon
        #- amdvlk # i do not know if this is needed
      - ttf-liberation # used by steam to replace ariel font
      - gamemode # might slightly boost performance
      - steam

      - lutris

      # core utils
      - perl
      - coreutils
      - inetutils # hostname command

      # editor so i dont have to use vim
      - nano

      # for terminal usage
      - kitty-terminfo

  tasks:
    # TODO investigate as some commands are root by default some are not

    - name: Enable en_US.UTF-8 locale in /etc/locale.gen
      become: yes
      ansible.builtin.lineinfile:
        path: /etc/locale.gen
        regexp: '^#en_US.UTF-8 UTF-8'
        line: 'en_US.UTF-8 UTF-8'
      register: commentline

    - name: Regenerate locale
      become: yes
      ansible.builtin.command:
        cmd: locale-gen
      when: commentline.changed

    - name: Enable pacman multilib
      become: yes
      ansible.builtin.blockinfile:
        path: /etc/pacman.conf
        insertafter: EOF
        marker: "## {mark} managed by ansible"
        block: |
          [multilib]
          Include = /etc/pacman.d/mirrorlist
      register: multilib_enable

    - name: Update packages
      become: yes
      ansible.builtin.command:
        cmd: pacman -Syuu --noconfirm
      when: multilib_enable.changed

    - name: Install required packages
      become: yes
      community.general.pacman:
        name: '{{ pacman_packages }}'
        state: present

    - become_user: sandorex
      become: yes
      ansible.builtin.import_role:
        name: proton-ge-steam

    # TODO these do not work for some reason
    # - name: Export Steam to host
    #   become_user: sandorex
    #   become: yes
    #   ansible.builtin.command:
    #     cmd: distrobox-export --app 'Steam'
    #   when: not steam_exported
    #
    # - name: Export Lutris to host
    #   become_user: sandorex
    #   become: yes
    #   ansible.builtin.command:
    #     cmd: distrobox-export --app 'net.lutris.Lutris'
    #   when: not lutris_exported

