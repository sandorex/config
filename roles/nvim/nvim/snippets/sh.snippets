snippet shebang-bash
	#!/usr/bin/env bash

snippet shebang-sh
	#!/bin/sh

snippet CDDIR
	cd "$(dirname "${BASH_SOURCE[0]}")" || exit 1

snippet DIR
	DIR=$(realpath "$(dirname "${BASH_SOURCE[0]}")")

snippet shellcheck
	# shellcheck disable=SC

snippet grep-parse-listfile
	grep -E -v '(^\s*#)|(^\s*$)' ${0:${VISUAL}}

snippet source-or-execution-bash
	if [[ "$${BASH_SOURCE[0]}" == "\$0" ]]; then
		# works only in bash
	fi

snippet rerun-sudo-bash
	# non posix compliant!
	if [[ $$EUID -ne 0 ]]; then
		exec sudo "$$SHELL" "\$0" "$@"
	fi

snippet rerun-sudo-sh
	if [ "$$(id -u)" -ne 0 ]; then
		exec sudo "$$SHELL" "\\$0" "$@"
	fi

snippet isroot
	if [ "$(id -u)" -ne 0 ]; then
		${0:${VISUAL}}
	fi

snippet spinner
	${0:${VISUAL}}sleep 10s &
	pid=$!

	while kill -0 "$pid" 2>/dev/null; do printf '.'; sleep 1; done
	echo

snippet whiptail-redirect
	var=$(whiptail ${0:${VISUAL}} 3>&1 1>&2 2>&3)

snippet parseargs
	POSITIONAL_ARGS=()

	while [ $# -gt 0 ]; do
		case \$1 in
			--example${0:${VISUAL}})
				EXAMPLE=\$1
				shift 2
				;;
			-*)
				echo "Unknown option \$1"
				exit 1
				;;
			*)
				# save positional arg
				POSITIONAL_ARGS+=("\$1")
				shift
				;;
		esac
	done

	# restore positional parameters
	set -- "${POSITIONAL_ARGS[@]}"

