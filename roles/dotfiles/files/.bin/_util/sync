#!/bin/bash
#
# sync - updates two paths by keeping the newest files, does not delete files

POSITIONAL_ARGS=()

while [[ $# -gt 0 ]]; do
    case $1 in
        -h)
            HELP=1
            shift
            ;;
        -*)
            echo "Unknown option $1"
            exit 1
            ;;
        *)
            # save positional arg
            POSITIONAL_ARGS+=("$1")
            shift
            ;;
    esac
done

# restore positional parameters
set -- "${POSITIONAL_ARGS[@]}"

if ! command -v rsync &>/dev/null; then
    echo "rsync is required for this script to work"
    exit 1
fi

if [[ -z "$1" || -z "$2" || -n "$HELP" ]]; then
    cat << EOF
Usage: $0 [-h] <path1> <path2>

Requires rsync

Synchronizes two paths (can be a directory or a file) so that if one of them is newer than the other it is copied to the other so that they are the same
NOTE: it won't delete files, if one path has one file missing it will not propagate to the other you have to delete a file from both paths for it to truly be deleted
EOF
    exit 0
fi

echo "Syncing $1 and $2"

# copy in both directions but only if newer than the target
rsync -au "$1" "$2"
rsync -au "$2" "$1"

