#!/usr/bin/env bash
# simple wrapper for neovim flatpak

# setup function that sets up the overrides for flatpak and install SDKs and run specific function

FLATPAK_SDK="rust-stable,node20"

bootstrap() {
    echo ":: Installing neovim flatpak"
    flatpak install -y io.neovim.nvim
    echo

    echo ":: Installing flatpak SDKs"
    for i in ${FLATPAK_SDK/,/ }; do
        flatpak install -y "org.freedesktop.Sdk.Extension.$i"
    done
    echo

    # allow access to nvim config if its a symlink (and it usualy is)
    local args=()
    if [[ -L "$HOME/.var/app/io.neovim.nvim/config/nvim" ]]; then
        args+=("--filesystem=$(readlink $HOME/.var/app/io.neovim.nvim/config/nvim)")
    fi

    echo ":: Sandboxing neovim flatpak"
    flatpak override --user \
        --unshare=network \
        --nofilesystem=host \
        --nofilesystem=home \
        --nofilesystem=/var/tmp \
        --nofilesystem=/tmp \
        --filesystem=host-os \
        --env=TERMINFO_DIRS=/var/run/host/usr/share/terminfo:/var/run/host/usr/lib/terminfo:/var/run/host/etc/terminfo:/usr/share/terminfo \
        --env="FLATPAK_ENABLE_SDK_EXT=$FLATPAK_SDK" \
        "${args[@]}" \
        io.neovim.nvim

    # TODO run :Bootstrap etc but with --share=network
}

# TODO call :UpdateAll
update() {
    echo "Update functionality is not implemented."
    exit 69
}

if ! command -v flatpak &>/dev/null; then
    echo "This wrapper script requires flatpak to be installed"
    exit 1
fi

has_args=0

args=()
POSITIONAL_ARGS=()

while [ $# -gt 0 ]; do
    case $1 in
        --bootstrap)
            bootstrap
            exit 0
            ;;
        --update)
            update
            exit 0
            ;;
        --network)
            args+=("--share=network")
            shift 1
            ;;
        -*)
            POSITIONAL_ARGS+=("$1")
            shift
            ;;
        *)
            args+=("--filesystem=$1")
            has_args=1
            shift
            ;;
    esac
done

# restore positional parameters
set -- "${POSITIONAL_ARGS[@]}"

# if no args then allow pwd
if [[ "$has_args" == "0" ]]; then
    args+=("--filesystem=$PWD")
fi

exec flatpak run "${args[@]}" io.neovim.nvim

